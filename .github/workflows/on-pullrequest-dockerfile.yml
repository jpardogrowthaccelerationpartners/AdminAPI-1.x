# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: On Pull Request - Dockerfile - Admin Console

on:
  push:
    branches:
      - adminapi23-rc.*
  pull_request:
    branches:
      - adminapi23-rc.*
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  IMAGE_TAG: ${{ github.ref_name }}

permissions: read-all

jobs:
  docker-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      pull-requests: write
      actions: read
      contents: write
    strategy:
      fail-fast: false
      matrix:
        dockerfile:
          [
            { name: "development", path: "Docker/dev.pgsql.Dockerfile", type: "local" }
          ]
    steps:
      - name: Get tag name
        run: |
          echo "REF=${{ github.event.pull_request && github.head_ref || github.ref_name }}"

      - name: Base tag name
        run: |
          echo "BAseTag:${{ github.event.pull_request.base.ref}}"

      # - name: Copy application folder to docker context
      #   if: ${{ matrix.dockerfile.type == 'local' }}
      #   run: |
      #     mkdir Docker/Application
      #     cp -r ./Application/EdFi.Ods.AdminApi ./Docker/Application
      #     cp -r ./Application/EdFi.Ods.AdminApi.AdminConsole ./Docker/Application
      #     cp ./Application/NuGet.Config ./Docker/Application

      # - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
      #   name: Run Linter on ${{ matrix.dockerfile.name }} Dockerfile
      #   with:
      #     dockerfile: ${{ matrix.dockerfile.path }}
      #     failure-threshold: error

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      #   with:
      #     username: ${{ env.DOCKER_USERNAME }}
      #     password: ${{ env.DOCKER_HUB_TOKEN }}

      # - name: Build
      #   run: |
      #     path=${{matrix.dockerfile.path}}
      #     folder=${path%/*}
      #     cd $folder
      #     dockerfile=$(echo ${{matrix.dockerfile.path}} | awk -F"/" '{print $NF}')

      #     docker build -f $dockerfile -t ${{ matrix.dockerfile.name }} --build-arg="VERSION=${{ env.IMAGE_TAG }}" .

      # - name: Analyze
      #   uses: docker/scout-action@67eb1afe777307506aaecb9acd9a0e0389cb99ae # v1.5.0
      #   with:
      #     command: cves
      #     image: local://${{ matrix.dockerfile.name }}
      #     sarif-file: sarif-${{ matrix.dockerfile.name }}.output.json
      #     summary: true

      # - name: Push admin console image
      #   run: |
      #     docker image tag ${{ matrix.dockerfile.name }} jpdga/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      #     docker push jpdga/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # - name: Upload SARIF result
      #   id: upload-sarif
      #   if: ${{ github.event_name != 'pull_request_target' }}
      #   uses: github/codeql-action/upload-sarif@cf7e9f23492505046de9a37830c3711dd0f25bb3 #codeql-bundle-v2.16.2
      #   with:
      #     sarif_file: sarif-${{ matrix.dockerfile.name }}.output.json

      # - name: Extract metadata (tags, labels) for admin console image
      #   id: metaadminconsole
      #   uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934  # v5.0.0
      #   with:
      #     images: ${{ env.IMAGE_NAME }}

