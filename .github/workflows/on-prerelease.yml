# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: On Pre-Release
on:
  workflow_dispatch:
  release:
    types:
      - prereleased

env:
  ARTIFACTS_API_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  ARTIFACTS_FEED_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  MANIFEST_FILE: "_manifest/spdx_2.2/manifest.spdx.json"
  PACKAGE_NAME: "AdminApi"
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  DATABASE_IMAGE_NAME: ${{ vars.DATABASE_IMAGE_NAME }}
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  REF: ${{ github.ref_name }}

permissions: read-all

jobs:
  pack:
    name: Build and Pack
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: pwsh
    outputs:
      hash-code: ${{ steps.hash-code.outputs.hash-code }}
      admin-api-version: ${{ steps.versions.outputs.admin-api }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set Version Numbers
        id: versions
        run: |
          $apiPrefix = "v"

          # Install the MinVer CLI tool
          &dotnet tool install --global minver-cli

          $apiVersion = $(minver -t $apiPrefix)

          # Full release name
          "admin-api=$apiVersion" >> $env:GITHUB_OUTPUT

          # SemVer
          "admin-api-semver=$($apiVersion -Replace $apiPrefix)" >> $env:GITHUB_OUTPUT

      - name: Publish .NET Assemblies
        run: |
          $apiVersion = "${{ steps.versions.outputs.admin-api-semver }}"

          ./build.ps1 -Command BuildAndPublish `
              -Configuration Release `
              -APIVersion $apiVersion

      - name: Setup Nuget.exe
        uses: nuget/setup-nuget@a21f25cd3998bf370fde17e3f1b4c12c175172f9 #v2.0.0

      - name: Create NuGet Packages
        if: success()
        run: |
          $apiVersion = "${{ steps.versions.outputs.admin-api-semver }}"

          "Building ${{ env.PACKAGE_NAME }} NuGet Package" | Write-Output
          # Admin API
          ./build.ps1 -Command PackageApi `
              -APIVersion  $apiVersion `
              -Configuration Release



